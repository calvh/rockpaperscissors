# configuration based on:
# https://github.com/miguelgrinberg/flack/blob/master/webserver/nginx/flack.conf

server {
	listen [::]:443 ssl ipv6only=on; # managed by Certbot
	listen 443 ssl; # managed by Certbot
	server_name rockpaperscissors.duckdns.org www.rockpaperscissors.duckdns.org;

	ssl_certificate /etc/letsencrypt/live/rockpaperscissors.duckdns.org/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/rockpaperscissors.duckdns.org/privkey.pem;
	ssl_trusted_certificate /etc/letsencrypt/live/rockpaperscissors.duckdns.org/chain.pem;
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_session_timeout 1d;
	ssl_session_cache shared:SSL:50m;
	ssl_stapling on;
	ssl_stapling_verify on;
	add_header Strict-Transport-Security max-age=15768000;

	# reverse proxy for HTTP connections
	location / {
		proxy_pass http://flask:5000;
		proxy_redirect off;

		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	}

	# reverse proxy for Socket.IO connections
	location /socket.io {
		proxy_pass http://flask:5000/socket.io;
		proxy_http_version 1.1;
		proxy_redirect off;
		proxy_buffering off;

		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "Upgrade";
	}

	location ~ ^/cadvisor(.*)$ {
		proxy_pass http://cadvisor:8080$1;
		proxy_redirect / /cadvisor/; # append /cadvisor/ to redirect header
		resolver 127.0.0.11; # resolver for docker
	}

	location ~ ^/prometheus(.*)$ {
		proxy_pass http://prometheus:9090;
	}

	location ~ ^/grafana(.*)$ {
		proxy_pass http://grafana:3000;
	}

	# Proxy Grafana Live WebSocket connections.
	location ~/grafana/api/live {
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "Upgrade";
		proxy_set_header Host $http_host;
		proxy_pass http://grafana:3000;
	}

	# let's encrypt host validation
	location ~ /.well-known {
		allow all;
	}
}


server {
	listen 80;
	listen [::]:80;
	server_name rockpaperscissors.duckdns.org www.rockpaperscissors.duckdns.org;

	if ($host = rockpaperscissors.duckdns.org) {
		return 301 https://$host$request_uri;
		} # managed by Certbot

		if ($host = www.rockpaperscissors.duckdns.org) {
			return 301 https://$host$request_uri;
			} # managed by Certbot

			return 404; # managed by Certbot
		}
